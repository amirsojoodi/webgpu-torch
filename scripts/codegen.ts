import { KernelSpec } from "../src/kernel";
import { getKernelSpecs } from "../src/op_spec";
import { registry } from "../src/op_table";

// import fs
import * as fs from "fs";

console.log("Running code generator...");

const absSrcDir = fs.realpathSync(__dirname + "/../src");
console.log("src dir:", absSrcDir);

// Generate op kernels
function getOpKernelsJSON(): string {
    const flattenedKernelSpecs: {[name: string]: KernelSpec} = {};
    for (const spec of registry) {
        const kernels = getKernelSpecs(spec);
        for (const kernel of kernels) {
            flattenedKernelSpecs[kernel.name] = kernel;
        }
    }
    const kernelsCode = JSON.stringify(flattenedKernelSpecs, null, 4);
    return kernelsCode;
}
function writeOpKernelsCode(): void {
    const outPath = absSrcDir + "/kernels_opgen.ts";
    const json = getOpKernelsJSON();
    fs.writeFileSync(outPath, `// Generated by scripts/codegen.ts
// Do not edit this file directly.
import { KernelSpec } from "./kernel";

export const kernels: { [name: string]: KernelSpec } =
${json};
`);
}
writeOpKernelsCode();
