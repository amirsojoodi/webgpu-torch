// Generated by scripts/codegen.ts
// Do not edit this file directly.
import { KernelSpec } from "./kernel";

export const kernels: { [name: string]: KernelSpec } =
{
    "Abs": {
        "name": "Abs",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = abs(input[global_id.x]);"
    },
    "Acos": {
        "name": "Acos",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = acos(input[global_id.x]);"
    },
    "Acosh": {
        "name": "Acosh",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = acosh(input[global_id.x]);"
    },
    "Add": {
        "name": "Add",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            },
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = (input[global_id.x] + other[global_id.x]);"
    },
    "Add_": {
        "name": "Add_",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "input",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        input[global_id.x] = (input[global_id.x] + other[global_id.x]);"
    },
    "Asin": {
        "name": "Asin",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = asin(input[global_id.x]);"
    },
    "Asinh": {
        "name": "Asinh",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = asinh(input[global_id.x]);"
    },
    "Atan": {
        "name": "Atan",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = atan(input[global_id.x]);"
    },
    "Atan2": {
        "name": "Atan2",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            },
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = atan2(input[global_id.x], other[global_id.x]);"
    },
    "Atan2_": {
        "name": "Atan2_",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "input",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        input[global_id.x] = atan2(input[global_id.x], other[global_id.x]);"
    },
    "Sub": {
        "name": "Sub",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "input",
                "shaderType": "array<f32>"
            },
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "out",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        out[global_id.x] = (input[global_id.x] - other[global_id.x]);"
    },
    "Sub_": {
        "name": "Sub_",
        "config": [
            {
                "name": "dtype"
            }
        ],
        "parameters": [
            {
                "name": "size",
                "shaderType": "u32"
            }
        ],
        "inputs": [
            {
                "name": "other",
                "shaderType": "array<f32>"
            }
        ],
        "outputs": [
            {
                "name": "input",
                "shaderType": "array<f32>",
                "size": "size"
            }
        ],
        "workgroupSize": [
            64,
            1,
            1
        ],
        "workgroupCount": [
            "size/8",
            1,
            1
        ],
        "shader": "\n        if (global_id.x >= parameters.size) {\n            return;\n        }\n        input[global_id.x] = (input[global_id.x] - other[global_id.x]);"
    }
};
